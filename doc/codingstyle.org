* FMRT SoC 代码规范

Verilog HDL 程序一个代码文件中仅包含一个模块，并且文件名与模块名一致。

代码中避免使用魔术数字（Magic number），应采用宏。魔术数字是指嵌入代码中的常数。不使用魔术数字可以增强代码的可移植性。全部宏都在头文件中定义。

每行代码文字数量都在 80 以内，行的缩进使用制表符。制表符的优点是宽度可在文本编辑器内设定，阅读代码的人可以自由调整。

** 变量名与宏的命名规则

*变量名* 使用英文小写字母、数字以及下划线（_）进行命名。

为了明确控制信号的极性， *负逻辑信号线* 的名称以下划线（_）结尾。

*宏* 使用英文大写字母、英文小写字母、数字以及下划线（_）进行命名。

*常数* 使用大写英文字母和下划线（_）进行命名。

在定义 *比特位* 或 *总线* 时，使用单词首字母大写的驼峰拼写法（Upper CamelCase）。

宏的定义在头文件中进行。头文件中加入包含文件防范（Include guard）语句防止重复定义。包含文件防范是防止同一个文件被多次包含的技术。包含文件中的代码全部写在 ~`ifndef~ 之中，并在其中定义防范用的宏。当再次引用该文件时， ~`ifndef~ 中的代码就会无效。命名规则如下：

#+BEGIN_SRC 

`ifndef _ _INC_GUARD_ _      // 包含文件防范
    `define _ _INC_GUARD_ _  // 包含文件防范用的宏

    `define DataBus 31:0     // 比特位或总线用驼峰拼写法
    `define DATA_W  32       // 常数使用大写英文字母和下划线
`endif                       // 包含文件防范

#+END_SRC

